package fr.cours.isima.presentation.article;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.ConstraintViolationException;

import org.apache.commons.lang3.math.NumberUtils;

import fr.cours.isima.business.Article;
import fr.cours.isima.business.Categorie;
import fr.cours.isima.persistence.UniqueConstraintException;
import fr.cours.isima.presentation.ErrorFields;
import fr.cours.isima.presentation.Form;
import fr.cours.isima.presentation.Page;

@WebServlet({ "/saveArticle" })
public class SaveArticleServlet extends ArticlesServlet {

    @Override
    protected Page process(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        final long id = NumberUtils.toLong(req.getParameter("id"), -1);
        final Article article = findArticleById(id);
        final Optional<Categorie> category = getCategories().findCategoryById(NumberUtils.toLong(req.getParameter("category")));
        article.setCategory(category);
        article.setDescription(req.getParameter("description"));
        article.setReference(req.getParameter("reference"));
        try {
            // Lors de la sauvegarde on controle les champs
            article.save();
            return redirectOnListArticles(req).build();
        } catch (final ConstraintViolationException e) {
            final ErrorFields fields = ErrorFields.withErrorsViolations(e.getConstraintViolations());
            return returnToEditPage(article, fields);
        } catch (final UniqueConstraintException e) {
            final ErrorFields fields = ErrorFields.withUniqueContraintException(e);
            return returnToEditPage(article, fields);
        }
    }

    private Page returnToEditPage(final Article article, final ErrorFields fields) {
        final ArticleViewBean artViewBean = new ArticleViewBean(getArticles(), getCategories(), article);
        final Form<ArticleViewBean> form = new Form<ArticleViewBean>(artViewBean, fields);

        return forwardOnEdit().withForm(form).build();
    }

    private Article findArticleById(long id) {
        if (id > 0) {
            return getArticles().findById(id);
        }
        return getArticles().createArticle();
    }
}
